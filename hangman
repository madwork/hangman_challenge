#!/usr/bin/ruby
#
# https://github.com/jasonswett/hangman_challenge
#

# frozen_string_literal: true

class Word
  attr_reader :secret

  def initialize(secret, char = "_")
    @secret = secret
    @letters = Array.new(secret.length) { char }
  end

  def guess(letter)
    guessed = false
    secret.each_char.with_index { |char, i| @letters[i], guessed = char, true if char == letter }
    guessed
  end

  def completed?
    secret == mask
  end

  def mask
    @letters.join
  end
end

class Hangman
  attr_reader :word, :guesses, :life

  def initialize(secret, life = 6)
    @word = Word.new(secret)
    @guesses = ""
    @life = life

    puts "#{word.mask} life left: #{life}"
  end

  def guess(letter)
    if word.guess(letter)
      if word.completed?
        puts "#{word.secret} YOU WIN!"
      else
        if guesses.empty?
          puts "#{word.mask} life left: #{life}"
        else
          puts "#{word.mask} life left: #{life} incorrect guesses: #{guesses}"
        end
      end
    else
      @life -= 1

      if life.zero?
        puts "#{word.mask} YOU LOSE!"
      else
        @guesses += letter
        puts "#{word.mask} life left: #{life} incorrect guesses: #{guesses}"
      end
    end
  end
end

# hangman = Hangman.new("apple")
# %w[a b q z e p l].each do |letter|
#   hangman.guess(letter)
# end

# hangman = Hangman.new("quixotic")
# %w[a e i o u l g p r].each do |letter|
#   hangman.guess(letter)
# end

File.readlines(ARGV[0], chomp: true).each do |line|
  next if line.empty?

  if line.length == 1
    @hangman.guess(line)
  else
    @hangman = Hangman.new(line)
  end
end
